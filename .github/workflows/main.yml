on:
  push:
    branches:
      - main

jobs:
  teleport-token:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
      - uses: hashicorp/setup-terraform@v2

      - name: Install Teleport
        uses: teleport-actions/setup@v1
        with:
          version: 12.1.1
      - name: Authorize against Teleport
        id: auth
        uses: teleport-actions/auth@v1
        with:
          # Specify the publically accessible address of your Teleport proxy.
          proxy: my.teleportproxy.net:443
          # Specify the name of the join token for your bot.
          token: gha-provisioning-token
          # Specify the length of time that the generated credentials should be
          # valid for. This is optional and defaults to "1h".
          certificate-ttl: 1h
          # Enable submission of anonymous usage telemetry to Teleport.
          # See https://goteleport.com/docs/machine-id/reference/telemetry/ for
          # more information.
          anonymous-telemetry: 1
      - name: Create Token
        # Specify the publically accessible address of your Teleport proxy below.
        run: | 
          token=$(tctl tokens add --type=node --auth-server my.teleportproxy.net:443 --format=json | jq .token)
          echo "::add-mask::$token"
          echo "TF_VAR_join_token=$token" >> $GITHUB_ENV
      - name: Terraform Init
        run: | 
          cd terraform
          terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: | 
          cd terraform
          terraform plan
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: | 
          cd terraform
          terraform apply -auto-approve
      - name: Sleep for 10 minutes
        run: sleep 10m
        shell: bash
      - name: Terraform Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: | 
          cd terraform
          terraform destroy -auto-approve

